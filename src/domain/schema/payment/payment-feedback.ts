import { ParseResult, Schema } from "effect";
import { PaymentTypeSchema } from "@/domain/schema/payment/payment-type";
import { PaymentStatusSchema } from "@/domain/schema/payment/payment-status";

export const FeedbackSchema = Schema.Struct({
  userid: Schema.String,
  linkkey: Schema.String,
  linkval: Schema.String,

  goodname: Schema.String,
  price: Schema.NumberFromString,
  recvphone: Schema.String,
  memo: Schema.String,
  reqaddr: Schema.String,
  reqdate: Schema.DateTimeUtc,
  pay_memo: Schema.String,
  pay_addr: Schema.String,
  pay_date: Schema.DateTimeUtc.pipe(Schema.optional),
  pay_type: PaymentTypeSchema.pipe(Schema.optional),
  paymethod_group: Schema.String,
  pay_state: PaymentStatusSchema,
  mul_no: Schema.String,
  payurl: Schema.String,
  csturl: Schema.String,
  vccode: Schema.String,
  donate_name: Schema.String,
  donate_identity: Schema.String,
  naverpoint: Schema.String,
  naverpay: Schema.String,
  card_name: Schema.String,
  payauthcode: Schema.String,
  cardinst: Schema.String,
  card_quota: Schema.String,
  card_num: Schema.String,
  noinf: Schema.String,
  var1: Schema.String,
  var2: Schema.String,
  currency: Schema.String,
  rebill_no: Schema.String,
  buyerid: Schema.String,
  amount_taxable: Schema.String,
  amount_taxfree: Schema.String,
  amount_vat: Schema.String,
  feedbacktype: Schema.String,
}).pipe(
  Schema.pick(
    "price",
    "pay_type",
    "pay_state",
    "linkkey",
    "linkval",
    "var1",
    "var2",
    "mul_no",

    "reqdate",
    "pay_date",
  ),
  Schema.rename({
    linkkey: "linkKey",
    linkval: "linkValue",
    pay_type: "payType",
    pay_state: "payState",
    var1: "developerId",
    var2: "applicationId",

    mul_no: "paymentId",
    reqdate: "requestDate",
    pay_date: "payDate",
  }),
);

/*

{
  userid: "pretocki3",
  linkkey: "qke/OeE0ZhiPYU3wWJqQ+O1DPJnCCRVaOgT+oqg6zaM=",
  linkval: "qke/OeE0ZhiPYU3wWJqQ+PDKAFSgdhno2PEIi5ev7ZI=",
  goodname: "앱 등록",
  price: "100000000",
  recvphone: "01099709915",
  memo: "",
  reqaddr: "0",
  reqdate: "2025-10-07 16:14:46",
  pay_memo: "",
  pay_addr: "",
  pay_date: "",
  pay_type: "",
  paymethod_group: "",
  pay_state: "1",
  mul_no: "110523353",
  payurl: "https://www.payapp.kr/z7tKaJB",
  csturl: "",
  vccode: "",
  donate_name: "",
  donate_identity: "",
  card_name: "",
  var1: "123456789",
  var2: "com.example.app",
  currency: "krw",
  rebill_no: "",
  buyerid: "",
  amount_taxable: "0",
  amount_taxfree: "100000000",
  amount_vat: "0",
  feedbacktype: "1",
}


{
  userid: "pretocki3",
  linkkey: "qke/OeE0ZhiPYU3wWJqQ+O1DPJnCCRVaOgT+oqg6zaM=",
  linkval: "qke/OeE0ZhiPYU3wWJqQ+PDKAFSgdhno2PEIi5ev7ZI=",
  goodname: "DIDIM 앱 등록",
  price: "1000",
  recvphone: "01099709915",
  memo: "",
  reqaddr: "0",
  reqdate: "2025-10-04 21:45:58",
  pay_memo: "",
  pay_addr: "",
  pay_date: "2025-10-04 21:46:30",
  pay_type: "16",
  paymethod_group: "25",
  pay_state: "4",
  mul_no: "110495488",
  payurl: "https://www.payapp.kr/z7tCViC",
  csturl: "https://www.payapp.kr/CST/z5th7S7",
  vccode: "",
  donate_name: "",
  donate_identity: "",
  naverpoint: "0",
  naverpay: "card",
  card_name: "하나-외환",
  payauthcode: "47890582",
  cardinst: "0",
  card_quota: "0",
  card_num: "9417-****-****-4252",
  noinf: "n",
  var1: "test_developer_id",
  var2: "test_application_id",
  currency: "krw",
  rebill_no: "",
  buyerid: "",
  amount_taxable: "0",
  amount_taxfree: "1000",
  amount_vat: "0",
  feedbacktype: "0",
}

 */
