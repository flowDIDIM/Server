import { Schema } from "effect";

export const FeedbackSchema = Schema.Struct({
  userid: Schema.String,
  linkkey: Schema.String,
  linkval: Schema.String,

  goodname: Schema.String,
  price: Schema.NumberFromString,
  recvphone: Schema.String,
  memo: Schema.String,
  reqaddr: Schema.String,
  reqdate: Schema.String,
  pay_memo: Schema.String,
  pay_addr: Schema.String,
  pay_date: Schema.String,
  pay_type: Schema.transformLiterals(
    ["1", "신용카드"],
    ["2", "휴대전화"],
    ["4", "대면결제"],
    ["6", "계좌이체"],
    ["7", "가상계좌"],
    ["15", "카카오페이"],
    ["16", "네이버페이"],
    ["17", "등록결제"],
    ["21", "스마일페이"],
    ["22", "위챗페이"],
    ["23", "애플페이"],
    ["24", "내통장결제"],
    ["25", "토스페이"],
  ),
  paymethod_group: Schema.String,
  pay_state: Schema.transformLiterals(
    ["1", "요청"],
    ["4", "결제완료"],
    ["8", "요청취소"],
    ["32", "요청취소"],
    ["9", "승인취소"],
    ["64", "승인취소"],
    ["10", "결제대기"],
    ["70", "부분취소"],
    ["71", "부분취소"],
  ),
  mul_no: Schema.String,
  payurl: Schema.String,
  csturl: Schema.String,
  vccode: Schema.String,
  donate_name: Schema.String,
  donate_identity: Schema.String,
  naverpoint: Schema.String,
  naverpay: Schema.String,
  card_name: Schema.String,
  payauthcode: Schema.String,
  cardinst: Schema.String,
  card_quota: Schema.String,
  card_num: Schema.String,
  noinf: Schema.String,
  var1: Schema.String,
  var2: Schema.String,
  currency: Schema.String,
  rebill_no: Schema.String,
  buyerid: Schema.String,
  amount_taxable: Schema.String,
  amount_taxfree: Schema.String,
  amount_vat: Schema.String,
  feedbacktype: Schema.String,
}).pipe(
  Schema.pick(
    "price",
    "pay_type",
    "pay_state",
    "linkkey",
    "linkval",
    "var1",
    "var2",
  ),
  Schema.rename({
    linkkey: "linkKey",
    linkval: "linkValue",
    pay_type: "payType",
    pay_state: "payState",
    var1: "developerId",
    var2: "applicationId",
  }),
);
